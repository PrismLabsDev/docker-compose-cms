server {
  listen 80;
  listen [::]:80;

  server_name cms.example.com;
  server_tokens off;

  location /.well-known/acme-challenge/ {
    root /var/certbot;
  }

  # location / {
  #     return 301 https://cms.example.com$request_uri;
  # }

  location / {
    proxy_pass http://strapi:1337/;
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_pass_request_headers on;
  }
}

# server {
#   listen 443 default_server ssl http2;
#   listen [::]:443 ssl http2;

#   server_name cms.example.com;

#   ssl_certificate /etc/nginx/ssl/live/cms.example.com/fullchain.pem;
#   ssl_certificate_key /etc/nginx/ssl/live/cms.example.com/privkey.pem;
#   ssl_protocols TLSv1.2 TLSv1.3;
    
#   location / {
#     proxy_pass http://strapi:1337/;
#     proxy_http_version 1.1;
#     proxy_set_header X-Forwarded-Host $host;
#     proxy_set_header X-Forwarded-Server $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
#     proxy_set_header Host $http_host;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection "Upgrade";
#     proxy_pass_request_headers on;
#   }
# }